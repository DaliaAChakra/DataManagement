{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Softech\\\\Documents\\\\DataManagementSystem\\\\frontend\\\\src\\\\components\\\\ImportCSV.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImportCSV = ({\n  token\n}) => {\n  _s();\n  const [csvFile, setCsvFile] = useState(null);\n  const [tableName, setTableName] = useState(\"\");\n  const handleCSVUpload = async () => {\n    if (!csvFile || !tableName) {\n      console.error(\"CSV file or table name is missing.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", csvFile); // Changed 'csv' to 'file'\n\n    // Debugging: Log FormData to check if the file is appended correctly\n    console.log(\"FormData:\", formData);\n    try {\n      const response = await axios.post(`http://127.0.0.1:8000/api/import_csv/${tableName}/`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n          // No need to manually set 'Content-Type' for multipart/form-data\n        }\n      });\n      console.log(\"CSV Imported:\", response.data);\n    } catch (error) {\n      console.error(\"Error importing CSV:\", error);\n      if (error.response) {\n        console.error(\"API Error:\", error.response.data);\n      } else {\n        console.error(\"Network or Other Error:\", error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Import CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: e => {\n        setCsvFile(e.target.files[0]);\n        console.log(\"CSV file selected:\", e.target.files[0]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: tableName,\n      onChange: e => setTableName(e.target.value),\n      placeholder: \"Table Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCSVUpload,\n      children: \"Upload CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ImportCSV, \"Qm9FobAIHwAq74wJnxDkbR2zjV4=\");\n_c = ImportCSV;\nexport default ImportCSV;\nvar _c;\n$RefreshReg$(_c, \"ImportCSV\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImportCSV","token","_s","csvFile","setCsvFile","tableName","setTableName","handleCSVUpload","console","error","formData","FormData","append","log","response","post","headers","Authorization","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Softech/Documents/DataManagementSystem/frontend/src/components/ImportCSV.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ImportCSV = ({ token }) => {\r\n  const [csvFile, setCsvFile] = useState(null);\r\n  const [tableName, setTableName] = useState(\"\");\r\n\r\n  const handleCSVUpload = async () => {\r\n    if (!csvFile || !tableName) {\r\n      console.error(\"CSV file or table name is missing.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", csvFile); // Changed 'csv' to 'file'\r\n\r\n    // Debugging: Log FormData to check if the file is appended correctly\r\n    console.log(\"FormData:\", formData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `http://127.0.0.1:8000/api/import_csv/${tableName}/`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            // No need to manually set 'Content-Type' for multipart/form-data\r\n          },\r\n        }\r\n      );\r\n      console.log(\"CSV Imported:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error importing CSV:\", error);\r\n      if (error.response) {\r\n        console.error(\"API Error:\", error.response.data);\r\n      } else {\r\n        console.error(\"Network or Other Error:\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Import CSV</h2>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".csv\"\r\n        onChange={(e) => {\r\n          setCsvFile(e.target.files[0]);\r\n          console.log(\"CSV file selected:\", e.target.files[0]);\r\n        }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={tableName}\r\n        onChange={(e) => setTableName(e.target.value)}\r\n        placeholder=\"Table Name\"\r\n      />\r\n      <button onClick={handleCSVUpload}>Upload CSV</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportCSV;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}