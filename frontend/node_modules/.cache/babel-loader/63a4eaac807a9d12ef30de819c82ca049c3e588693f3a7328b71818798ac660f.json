{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Softech\\\\Documents\\\\Data_Management\\\\frontend\\\\src\\\\components\\\\CreateTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { MdDelete } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTable = ({\n  token\n}) => {\n  _s();\n  const [tableName, setTableName] = useState(\"\");\n  const [fields, setFields] = useState([{\n    name: \"\",\n    type: \"\",\n    is_unique: false\n  }]);\n  const [records, setRecords] = useState([]);\n  const [newRecord, setNewRecord] = useState({});\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [message, setMessage] = useState({\n    type: \"\",\n    text: \"\"\n  });\n  const fieldTypes = [\"VARCHAR(255)\", \"INTEGER\", \"DATE\", \"BOOLEAN\"];\n  useEffect(() => {\n    fetchTables();\n  }, []);\n  const fetchTables = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/api/list_tables/\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTables(response.data.tables);\n    } catch (error) {\n      setMessage({\n        type: \"error\",\n        text: \"Error fetching tables. Please try again.\"\n      });\n    }\n  };\n  const handleTableClick = async tableName => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/api/get_table_fields/${tableName}/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSelectedTable(response.data.fields);\n    } catch (error) {\n      setMessage({\n        type: \"error\",\n        text: \"Error fetching table fields. Please try again.\"\n      });\n    }\n  };\n  const handleAddField = () => {\n    setFields([...fields, {\n      name: \"\",\n      type: \"\",\n      is_unique: false\n    }]);\n  };\n  const handleFieldChange = (index, event) => {\n    const values = [...fields];\n    values[index][event.target.name] = event.target.value;\n    setFields(values);\n  };\n  const handleCreateRecord = async () => {\n    try {\n      await axios.post(`http://127.0.0.1:8000/api/${tableName}/`, newRecord, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage({\n        type: \"success\",\n        text: \"Record added successfully!\"\n      });\n      fetchRecords();\n    } catch (error) {\n      setMessage({\n        type: \"error\",\n        text: \"Error adding record. Please try again.\"\n      });\n    }\n  };\n  const handleRecordChange = (field, value) => {\n    setNewRecord({\n      ...newRecord,\n      [field]: value\n    });\n  };\n  const fetchRecords = async () => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/api/${tableName}/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setRecords(response.data);\n    } catch (error) {\n      setMessage({\n        type: \"error\",\n        text: \"Error fetching records. Please try again.\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: tableName,\n      onChange: e => setTableName(e.target.value),\n      placeholder: \"Table Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), selectedTable && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), selectedTable.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Enter ${field.name}`,\n          onChange: e => handleRecordChange(field.name, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateRecord,\n        children: \"Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), records.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: records.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(record)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No records available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTable, \"Ezta91vt/jIpraTm/Gtn1YoJlgI=\");\n_c = CreateTable;\nexport default CreateTable;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","MdDelete","jsxDEV","_jsxDEV","CreateTable","token","_s","tableName","setTableName","fields","setFields","name","type","is_unique","records","setRecords","newRecord","setNewRecord","selectedTable","setSelectedTable","message","setMessage","text","fieldTypes","fetchTables","response","get","headers","Authorization","setTables","data","tables","error","handleTableClick","handleAddField","handleFieldChange","index","event","values","target","value","handleCreateRecord","post","fetchRecords","handleRecordChange","field","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","e","placeholder","map","onClick","length","record","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Softech/Documents/Data_Management/frontend/src/components/CreateTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nconst CreateTable = ({ token }) => {\r\n  const [tableName, setTableName] = useState(\"\");\r\n  const [fields, setFields] = useState([\r\n    { name: \"\", type: \"\", is_unique: false },\r\n  ]);\r\n  const [records, setRecords] = useState([]);\r\n  const [newRecord, setNewRecord] = useState({});\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n  const [message, setMessage] = useState({ type: \"\", text: \"\" });\r\n\r\n  const fieldTypes = [\"VARCHAR(255)\", \"INTEGER\", \"DATE\", \"BOOLEAN\"];\r\n\r\n  useEffect(() => {\r\n    fetchTables();\r\n  }, []);\r\n\r\n  const fetchTables = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://127.0.0.1:8000/api/list_tables/\",\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setTables(response.data.tables);\r\n    } catch (error) {\r\n      setMessage({\r\n        type: \"error\",\r\n        text: \"Error fetching tables. Please try again.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTableClick = async (tableName) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://127.0.0.1:8000/api/get_table_fields/${tableName}/`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSelectedTable(response.data.fields);\r\n    } catch (error) {\r\n      setMessage({\r\n        type: \"error\",\r\n        text: \"Error fetching table fields. Please try again.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddField = () => {\r\n    setFields([...fields, { name: \"\", type: \"\", is_unique: false }]);\r\n  };\r\n\r\n  const handleFieldChange = (index, event) => {\r\n    const values = [...fields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setFields(values);\r\n  };\r\n\r\n  const handleCreateRecord = async () => {\r\n    try {\r\n      await axios.post(`http://127.0.0.1:8000/api/${tableName}/`, newRecord, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setMessage({ type: \"success\", text: \"Record added successfully!\" });\r\n      fetchRecords();\r\n    } catch (error) {\r\n      setMessage({\r\n        type: \"error\",\r\n        text: \"Error adding record. Please try again.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRecordChange = (field, value) => {\r\n    setNewRecord({ ...newRecord, [field]: value });\r\n  };\r\n\r\n  const fetchRecords = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://127.0.0.1:8000/api/${tableName}/`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setRecords(response.data);\r\n    } catch (error) {\r\n      setMessage({\r\n        type: \"error\",\r\n        text: \"Error fetching records. Please try again.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Table</h2>\r\n\r\n      {message.text && (\r\n        <div className={`message ${message.type}`}>{message.text}</div>\r\n      )}\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={tableName}\r\n        onChange={(e) => setTableName(e.target.value)}\r\n        placeholder=\"Table Name\"\r\n      />\r\n\r\n      {selectedTable && (\r\n        <div>\r\n          <h3>Add Record</h3>\r\n          {selectedTable.map((field, index) => (\r\n            <div key={index}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder={`Enter ${field.name}`}\r\n                onChange={(e) => handleRecordChange(field.name, e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n          <button onClick={handleCreateRecord}>Add Record</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Display records */}\r\n      <h3>Records</h3>\r\n      {records.length > 0 ? (\r\n        <ul>\r\n          {records.map((record, index) => (\r\n            <li key={index}>{JSON.stringify(record)}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No records available</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CACnC;IAAEa,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAM,CAAC,CACzC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC;IAAEc,IAAI,EAAE,EAAE;IAAEU,IAAI,EAAE;EAAG,CAAC,CAAC;EAE9D,MAAMC,UAAU,GAAG,CAAC,cAAc,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,CAAC;EAEjExB,SAAS,CAAC,MAAM;IACdyB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAC9B,wCAAwC,EACxC;QACEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUvB,KAAK;QAAG;MAC9C,CACF,CAAC;MACDwB,SAAS,CAACJ,QAAQ,CAACK,IAAI,CAACC,MAAM,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdX,UAAU,CAAC;QACTT,IAAI,EAAE,OAAO;QACbU,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMW,gBAAgB,GAAG,MAAO1B,SAAS,IAAK;IAC5C,IAAI;MACF,MAAMkB,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAC9B,8CAA8CnB,SAAS,GAAG,EAC1D;QACEoB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUvB,KAAK;QAAG;MAC9C,CACF,CAAC;MACDc,gBAAgB,CAACM,QAAQ,CAACK,IAAI,CAACrB,MAAM,CAAC;IACxC,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACdX,UAAU,CAAC;QACTT,IAAI,EAAE,OAAO;QACbU,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BxB,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;MAAEE,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,MAAMsB,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C,MAAMC,MAAM,GAAG,CAAC,GAAG7B,MAAM,CAAC;IAC1B6B,MAAM,CAACF,KAAK,CAAC,CAACC,KAAK,CAACE,MAAM,CAAC5B,IAAI,CAAC,GAAG0B,KAAK,CAACE,MAAM,CAACC,KAAK;IACrD9B,SAAS,CAAC4B,MAAM,CAAC;EACnB,CAAC;EAED,MAAMG,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMzC,KAAK,CAAC0C,IAAI,CAAC,6BAA6BnC,SAAS,GAAG,EAAES,SAAS,EAAE;QACrEW,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUvB,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFgB,UAAU,CAAC;QAAET,IAAI,EAAE,SAAS;QAAEU,IAAI,EAAE;MAA6B,CAAC,CAAC;MACnEqB,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdX,UAAU,CAAC;QACTT,IAAI,EAAE,OAAO;QACbU,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMsB,kBAAkB,GAAGA,CAACC,KAAK,EAAEL,KAAK,KAAK;IAC3CvB,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAE,CAAC6B,KAAK,GAAGL;IAAM,CAAC,CAAC;EAChD,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAC9B,6BAA6BnB,SAAS,GAAG,EACzC;QACEoB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUvB,KAAK;QAAG;MAC9C,CACF,CAAC;MACDU,UAAU,CAACU,QAAQ,CAACK,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdX,UAAU,CAAC;QACTT,IAAI,EAAE,OAAO;QACbU,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEnB,OAAA;IAAA2C,QAAA,gBACE3C,OAAA;MAAA2C,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpB9B,OAAO,CAACE,IAAI,iBACXnB,OAAA;MAAKgD,SAAS,EAAE,WAAW/B,OAAO,CAACR,IAAI,EAAG;MAAAkC,QAAA,EAAE1B,OAAO,CAACE;IAAI;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAC/D,eAED/C,OAAA;MACES,IAAI,EAAC,MAAM;MACX4B,KAAK,EAAEjC,SAAU;MACjB6C,QAAQ,EAAGC,CAAC,IAAK7C,YAAY,CAAC6C,CAAC,CAACd,MAAM,CAACC,KAAK,CAAE;MAC9Cc,WAAW,EAAC;IAAY;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EAEDhC,aAAa,iBACZf,OAAA;MAAA2C,QAAA,gBACE3C,OAAA;QAAA2C,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClBhC,aAAa,CAACqC,GAAG,CAAC,CAACV,KAAK,EAAET,KAAK,kBAC9BjC,OAAA;QAAA2C,QAAA,eACE3C,OAAA;UACES,IAAI,EAAC,MAAM;UACX0C,WAAW,EAAE,SAAST,KAAK,CAAClC,IAAI,EAAG;UACnCyC,QAAQ,EAAGC,CAAC,IAAKT,kBAAkB,CAACC,KAAK,CAAClC,IAAI,EAAE0C,CAAC,CAACd,MAAM,CAACC,KAAK;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE;MAAC,GALMd,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACN,CAAC,eACF/C,OAAA;QAAQqD,OAAO,EAAEf,kBAAmB;QAAAK,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CACN,eAGD/C,OAAA;MAAA2C,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfpC,OAAO,CAAC2C,MAAM,GAAG,CAAC,gBACjBtD,OAAA;MAAA2C,QAAA,EACGhC,OAAO,CAACyC,GAAG,CAAC,CAACG,MAAM,EAAEtB,KAAK,kBACzBjC,OAAA;QAAA2C,QAAA,EAAiBa,IAAI,CAACC,SAAS,CAACF,MAAM;MAAC,GAA9BtB,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8B,CAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAEL/C,OAAA;MAAA2C,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA5IIF,WAAW;AAAAyD,EAAA,GAAXzD,WAAW;AA8IjB,eAAeA,WAAW;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}