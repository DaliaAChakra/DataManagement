{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Softech\\\\Documents\\\\DataManagementSystem\\\\frontend\\\\src\\\\components\\\\CRUDOperations.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CRUDOperations = ({\n  token,\n  tableName\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [record, setRecord] = useState({\n    name: \"\"\n  }); // For adding new records\n  const [editRecord, setEditRecord] = useState(null); // Store the record being edited\n\n  // Fetch data from API\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/api/crud/${tableName}/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    if (tableName) {\n      fetchData();\n    }\n  }, [tableName, token]);\n\n  // Handle input change\n  const handleInputChange = event => {\n    setRecord({\n      ...record,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // Add a new record\n  const handleAddRecord = async () => {\n    try {\n      await axios.post(`http://127.0.0.1:8000/api/crud/${tableName}/`, record, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setRecord({\n        name: \"\"\n      }); // Clear input\n      fetchData(); // Refresh data\n    } catch (error) {\n      console.error(\"Error adding record:\", error);\n    }\n  };\n\n  // Set record to be edited\n  const handleEditClick = item => {\n    setEditRecord(item);\n  };\n\n  // Handle update input change\n  const handleEditInputChange = event => {\n    setEditRecord({\n      ...editRecord,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // Update a record\n  const handleUpdateRecord = async () => {\n    try {\n      await axios.put(`http://127.0.0.1:8000/api/crud/${tableName}/${editRecord.id}/`, editRecord, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEditRecord(null); // Exit edit mode\n      fetchData(); // Refresh data\n    } catch (error) {\n      console.error(\"Error updating record:\", error);\n    }\n  };\n\n  // Delete a record\n  const handleDeleteRecord = async id => {\n    try {\n      await axios.delete(`http://127.0.0.1:8000/api/crud/${tableName}/${id}/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchData(); // Refresh data\n    } catch (error) {\n      console.error(\"Error deleting record:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"CRUD Operations for \", tableName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editRecord && editRecord.id === item.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: editRecord.name,\n            onChange: handleEditInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdateRecord,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditRecord(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item.name, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditClick(item),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteRecord(item.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: record.name,\n        placeholder: \"Record Name\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRecord,\n        children: \"Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(CRUDOperations, \"12nwciAlNk6bvb4T558JZkyT7wo=\");\n_c = CRUDOperations;\nexport default CRUDOperations;\nvar _c;\n$RefreshReg$(_c, \"CRUDOperations\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CRUDOperations","token","tableName","_s","data","setData","record","setRecord","name","editRecord","setEditRecord","fetchData","response","get","headers","Authorization","error","console","handleInputChange","event","target","value","handleAddRecord","post","handleEditClick","item","handleEditInputChange","handleUpdateRecord","put","id","handleDeleteRecord","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","onClick","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Softech/Documents/DataManagementSystem/frontend/src/components/CRUDOperations.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CRUDOperations = ({ token, tableName }) => {\r\n  const [data, setData] = useState([]);\r\n  const [record, setRecord] = useState({ name: \"\" }); // For adding new records\r\n  const [editRecord, setEditRecord] = useState(null); // Store the record being edited\r\n\r\n  // Fetch data from API\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://127.0.0.1:8000/api/crud/${tableName}/`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tableName) {\r\n      fetchData();\r\n    }\r\n  }, [tableName, token]);\r\n\r\n  // Handle input change\r\n  const handleInputChange = (event) => {\r\n    setRecord({\r\n      ...record,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // Add a new record\r\n  const handleAddRecord = async () => {\r\n    try {\r\n      await axios.post(`http://127.0.0.1:8000/api/crud/${tableName}/`, record, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setRecord({ name: \"\" }); // Clear input\r\n      fetchData(); // Refresh data\r\n    } catch (error) {\r\n      console.error(\"Error adding record:\", error);\r\n    }\r\n  };\r\n\r\n  // Set record to be edited\r\n  const handleEditClick = (item) => {\r\n    setEditRecord(item);\r\n  };\r\n\r\n  // Handle update input change\r\n  const handleEditInputChange = (event) => {\r\n    setEditRecord({\r\n      ...editRecord,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // Update a record\r\n  const handleUpdateRecord = async () => {\r\n    try {\r\n      await axios.put(\r\n        `http://127.0.0.1:8000/api/crud/${tableName}/${editRecord.id}/`,\r\n        editRecord,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setEditRecord(null); // Exit edit mode\r\n      fetchData(); // Refresh data\r\n    } catch (error) {\r\n      console.error(\"Error updating record:\", error);\r\n    }\r\n  };\r\n\r\n  // Delete a record\r\n  const handleDeleteRecord = async (id) => {\r\n    try {\r\n      await axios.delete(`http://127.0.0.1:8000/api/crud/${tableName}/${id}/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      fetchData(); // Refresh data\r\n    } catch (error) {\r\n      console.error(\"Error deleting record:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>CRUD Operations for {tableName}</h2>\r\n\r\n      {/* List Records */}\r\n      <ul>\r\n        {data.map((item) => (\r\n          <li key={item.id}>\r\n            {editRecord && editRecord.id === item.id ? (\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={editRecord.name}\r\n                  onChange={handleEditInputChange}\r\n                />\r\n                <button onClick={handleUpdateRecord}>Update</button>\r\n                <button onClick={() => setEditRecord(null)}>Cancel</button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {item.name} {/* Adjust this based on your data structure */}\r\n                <button onClick={() => handleEditClick(item)}>Edit</button>\r\n                <button onClick={() => handleDeleteRecord(item.id)}>\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Add Record */}\r\n      <div>\r\n        <h3>Add a Record</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={record.name}\r\n          placeholder=\"Record Name\"\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddRecord}>Add Record</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CRUDOperations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}