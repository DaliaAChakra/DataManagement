{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Softech\\\\Documents\\\\DataManagementSystem\\\\frontend\\\\src\\\\components\\\\CRUDOperations.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CRUDOperations = ({\n  token,\n  tableName\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [record, setRecord] = useState({}); // To store new record input\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/api/crud/${tableName}/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    if (tableName) {\n      fetchData();\n    }\n  }, [tableName, token]);\n  const handleAddRecord = async () => {\n    try {\n      const response = await axios.post(`http://127.0.0.1:8000/api/crud/${tableName}/`, record, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Record added:\", response.data);\n      fetchData(); // Refresh data after adding a record\n    } catch (error) {\n      console.error(\"Error adding record:\", error);\n    }\n  };\n  const handleInputChange = event => {\n    setRecord({\n      ...record,\n      [event.target.name]: event.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"CRUD Operations for \", tableName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" \"]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Record Name\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRecord,\n        children: \"Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CRUDOperations, \"vwBiavUxKC490W0jo6ga9wM2FKE=\");\n_c = CRUDOperations;\nexport default CRUDOperations;\nvar _c;\n$RefreshReg$(_c, \"CRUDOperations\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CRUDOperations","token","tableName","_s","data","setData","record","setRecord","fetchData","response","get","headers","Authorization","error","console","handleAddRecord","post","log","handleInputChange","event","target","name","value","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","id","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Softech/Documents/DataManagementSystem/frontend/src/components/CRUDOperations.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CRUDOperations = ({ token, tableName }) => {\r\n  const [data, setData] = useState([]);\r\n  const [record, setRecord] = useState({}); // To store new record input\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://127.0.0.1:8000/api/crud/${tableName}/`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tableName) {\r\n      fetchData();\r\n    }\r\n  }, [tableName, token]);\r\n\r\n  const handleAddRecord = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        `http://127.0.0.1:8000/api/crud/${tableName}/`,\r\n        record,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      console.log(\"Record added:\", response.data);\r\n      fetchData(); // Refresh data after adding a record\r\n    } catch (error) {\r\n      console.error(\"Error adding record:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setRecord({\r\n      ...record,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>CRUD Operations for {tableName}</h2>\r\n      <ul>\r\n        {data.map((item) => (\r\n          <li key={item.id}>\r\n            {item.name} {/* Adjust this based on your data structure */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <h3>Add a Record</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Record Name\"\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddRecord}>Add Record</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CRUDOperations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}