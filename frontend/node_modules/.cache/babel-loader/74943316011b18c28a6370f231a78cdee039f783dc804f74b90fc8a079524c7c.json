{"ast":null,"code":"import React,{useState}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ImportCSV=_ref=>{let{token}=_ref;const[csvFile,setCsvFile]=useState(null);const[tableName,setTableName]=useState(\"\");const handleCSVUpload=async()=>{if(!csvFile||!tableName){console.error(\"CSV file or table name is missing.\");return;}const formData=new FormData();formData.append(\"file\",csvFile);// Changed 'csv' to 'file'\n// Debugging: Log FormData to check if the file is appended correctly\nconsole.log(\"FormData:\",formData);try{const response=await axios.post(\"http://127.0.0.1:8000/api/import_csv/\".concat(tableName,\"/\"),formData,{headers:{Authorization:\"Bearer \".concat(token)// No need to manually set 'Content-Type' for multipart/form-data\n}});console.log(\"CSV Imported:\",response.data);}catch(error){console.error(\"Error importing CSV:\",error);if(error.response){console.error(\"API Error:\",error.response.data);}else{console.error(\"Network or Other Error:\",error.message);}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Import CSV\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:e=>{setCsvFile(e.target.files[0]);console.log(\"CSV file selected:\",e.target.files[0]);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:tableName,onChange:e=>setTableName(e.target.value),placeholder:\"Table Name\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCSVUpload,children:\"Upload CSV\"})]});};export default ImportCSV;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","ImportCSV","_ref","token","csvFile","setCsvFile","tableName","setTableName","handleCSVUpload","console","error","formData","FormData","append","log","response","post","concat","headers","Authorization","data","message","children","type","accept","onChange","e","target","files","value","placeholder","onClick"],"sources":["C:/Users/Softech/Documents/DataManagementSystem/frontend/src/components/ImportCSV.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ImportCSV = ({ token }) => {\r\n  const [csvFile, setCsvFile] = useState(null);\r\n  const [tableName, setTableName] = useState(\"\");\r\n\r\n  const handleCSVUpload = async () => {\r\n    if (!csvFile || !tableName) {\r\n      console.error(\"CSV file or table name is missing.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", csvFile); // Changed 'csv' to 'file'\r\n\r\n    // Debugging: Log FormData to check if the file is appended correctly\r\n    console.log(\"FormData:\", formData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `http://127.0.0.1:8000/api/import_csv/${tableName}/`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            // No need to manually set 'Content-Type' for multipart/form-data\r\n          },\r\n        }\r\n      );\r\n      console.log(\"CSV Imported:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error importing CSV:\", error);\r\n      if (error.response) {\r\n        console.error(\"API Error:\", error.response.data);\r\n      } else {\r\n        console.error(\"Network or Other Error:\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Import CSV</h2>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".csv\"\r\n        onChange={(e) => {\r\n          setCsvFile(e.target.files[0]);\r\n          console.log(\"CSV file selected:\", e.target.files[0]);\r\n        }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={tableName}\r\n        onChange={(e) => setTableName(e.target.value)}\r\n        placeholder=\"Table Name\"\r\n      />\r\n      <button onClick={handleCSVUpload}>Upload CSV</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportCSV;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAe,IAAd,CAAEC,KAAM,CAAC,CAAAD,IAAA,CAC1B,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAE9C,KAAM,CAAAa,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CAACJ,OAAO,EAAI,CAACE,SAAS,CAAE,CAC1BG,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC,CACnD,OACF,CAEA,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAET,OAAO,CAAC,CAAE;AAElC;AACAK,OAAO,CAACK,GAAG,CAAC,WAAW,CAAEH,QAAQ,CAAC,CAElC,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAnB,KAAK,CAACoB,IAAI,yCAAAC,MAAA,CACSX,SAAS,MACjDK,QAAQ,CACR,CACEO,OAAO,CAAE,CACPC,aAAa,WAAAF,MAAA,CAAYd,KAAK,CAC9B;AACF,CACF,CACF,CAAC,CACDM,OAAO,CAACK,GAAG,CAAC,eAAe,CAAEC,QAAQ,CAACK,IAAI,CAAC,CAC7C,CAAE,MAAOV,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,GAAIA,KAAK,CAACK,QAAQ,CAAE,CAClBN,OAAO,CAACC,KAAK,CAAC,YAAY,CAAEA,KAAK,CAACK,QAAQ,CAACK,IAAI,CAAC,CAClD,CAAC,IAAM,CACLX,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAACW,OAAO,CAAC,CACzD,CACF,CACF,CAAC,CAED,mBACErB,KAAA,QAAAsB,QAAA,eACExB,IAAA,OAAAwB,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBxB,IAAA,UACEyB,IAAI,CAAC,MAAM,CACXC,MAAM,CAAC,MAAM,CACbC,QAAQ,CAAGC,CAAC,EAAK,CACfrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC7BnB,OAAO,CAACK,GAAG,CAAC,oBAAoB,CAAEY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CACtD,CAAE,CACH,CAAC,cACF9B,IAAA,UACEyB,IAAI,CAAC,MAAM,CACXM,KAAK,CAAEvB,SAAU,CACjBmB,QAAQ,CAAGC,CAAC,EAAKnB,YAAY,CAACmB,CAAC,CAACC,MAAM,CAACE,KAAK,CAAE,CAC9CC,WAAW,CAAC,YAAY,CACzB,CAAC,cACFhC,IAAA,WAAQiC,OAAO,CAAEvB,eAAgB,CAAAc,QAAA,CAAC,YAAU,CAAQ,CAAC,EAClD,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}